---
- name: Crear credenciales en Jenkins usando Jenkins CLI
  hosts: localhost
  become: yes
  gather_facts: no

  vars:
    jenkins_url: http://localhost:8080
    jenkins_admin_user: admin
    jenkins_admin_password: admin_password

  tasks:
    ##################################################################
    # Descargar Jenkins CLI
    ##################################################################
    - name: Descargar jenkins-cli.jar
      get_url:
        url: "{{ jenkins_url }}/jnlpJars/jenkins-cli.jar"
        dest: /tmp/jenkins-cli.jar

    ##################################################################
    # Crear credencial Docker Hub usando Jenkins CLI
    ##################################################################
    - name: Crear credencial Docker Hub usando Jenkins CLI
      shell: >
        java -jar {{ jenkins_cli_jar }} -s {{ jenkins_url }}
        -auth {{ jenkins_admin_user }}:{{ jenkins_admin_password }}
        create-credentials system::system::jenkins _ /tmp/dockerhub-cred.xml
      args:
        executable: /bin/bash

    ##################################################################
    # Crear credencial Azure Service Principal usando Jenkins CLI
    ##################################################################
    - name: Crear credencial Azure SP usando Jenkins CLI
      shell: >
        java -jar {{ jenkins_cli_jar }} -s {{ jenkins_url }}
        -auth {{ jenkins_admin_user }}:{{ jenkins_admin_password }}
        create-credentials system::system::jenkins _ /tmp/azure-sp-cred.xml
      args:
        executable: /bin/bash

    ##################################################################
    # Crear archivo XML para la credencial Docker Hub
    ##################################################################
    - name: Crear archivo temporal con XML de Docker Hub credencial
      copy:
        content: |
          <?xml version='1.1' encoding='UTF-8'?>
          <com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl>
            <scope>GLOBAL</scope>
            <id>dockerhub-cred</id>
            <username>dylalva</username>
            <password>{{ lookup('env', 'DOCKER_PASSWORD') }}</password>
            <description>Docker Hub Credentials</description>
          </com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl>
        dest: /tmp/dockerhub-cred.xml
        mode: '0644'

    ##################################################################
    # Crear archivo XML para la credencial Azure Service Principal
    ##################################################################
    - name: Crear archivo temporal con XML de Azure SP credencial
      copy:
        content: |
          <?xml version='1.1' encoding='UTF-8'?>
          <com.microsoft.azure.credentials.AzureServicePrincipal>
            <scope>GLOBAL</scope>
            <id>azure-service-principal</id>
            <subscriptionId>{{ lookup('env', 'AZURE_SUBSCRIPTION_ID') }}</subscriptionId>
            <clientId>{{ lookup('env', 'AZURE_CLIENT_ID') }}</clientId>
            <clientSecret>{{ lookup('env', 'AZURE_CLIENT_SECRET') }}</clientSecret>
            <tenant>{{ lookup('env', 'AZURE_TENANT_ID') }}</tenant>
            <description>Azure Service Principal</description>
          </com.microsoft.azure.credentials.AzureServicePrincipal>
        dest: /tmp/azure-sp-cred.xml
        mode: '0644'

    ##################################################################
    # Limpiar archivos temporales
    ##################################################################
    - name: Limpiar archivos temporales
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /tmp/jenkins-cli.jar
        - /tmp/dockerhub-cred.xml
        - /tmp/azure-sp-cred.xml

    ##################################################################
    # Mensaje final de Ã©xito
    ##################################################################
    - name: Credenciales Docker Hub y Azure creadas con Ã©xito ðŸŽ‰
      debug:
        msg: "âœ… Credenciales Docker Hub y Azure Service Principal creadas con Ã©xito."
