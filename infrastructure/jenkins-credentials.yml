---
- name: Crear credenciales en Jenkins usando la API REST
  hosts: jenkins_vm
  become: yes
  gather_facts: no

  vars:
    jenkins_url: http://localhost:8080
    jenkins_admin_user: admin
    jenkins_admin_password: admin_password
    docker_password: "{{ lookup('env', 'DOCKER_PASSWORD') }}"
    azure_client_id: "{{ lookup('env', 'AZURE_CLIENT_ID') }}"
    azure_client_secret: "{{ lookup('env', 'AZURE_CLIENT_SECRET') }}"
    azure_tenant_id: "{{ lookup('env', 'AZURE_TENANT_ID') }}"
    azure_subscription_id: "{{ lookup('env', 'AZURE_SUBSCRIPTION_ID') }}"

  tasks:
    ##################################################################
    # Esperar a que Jenkins estÃ© disponible
    ##################################################################
    - name: Esperar a que Jenkins estÃ© disponible
      uri:
        url: "{{ jenkins_url }}/login"
        method: GET
        status_code: 200
      register: result
      until: result.status == 200
      retries: 30
      delay: 10

    ##################################################################
    # Crear credencial Docker Hub usando API POST
    ##################################################################
    - name: Crear credencial Docker Hub usando API POST
      uri:
        url: "{{ jenkins_url }}/credentials/store/system/domain/_/createCredentials"
        method: POST
        user: "{{ jenkins_admin_user }}"
        password: "{{ jenkins_admin_password }}"
        headers:
          Content-Type: "application/x-www-form-urlencoded"
        body: |
          json={
            "": "0",
            "credentials": {
              "scope": "GLOBAL",
              "id": "dockerhub-cred",
              "username": "dylalva",
              "password": "{{ docker_password }}",
              "description": "Docker Hub Credentials",
              "$class": "com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl"
            }
          }
        body_format: raw
        status_code: 200
        return_content: yes

    ##################################################################
    # Crear credencial Azure Service Principal usando API POST
    ##################################################################
    - name: Crear credencial Azure SP usando API POST
      uri:
        url: "{{ jenkins_url }}/credentials/store/system/domain/_/createCredentials"
        method: POST
        user: "{{ jenkins_admin_user }}"
        password: "{{ jenkins_admin_password }}"
        headers:
          Content-Type: "application/x-www-form-urlencoded"
        body: |
          json={
            "": "0",
            "credentials": {
              "scope": "GLOBAL",
              "id": "azure-service-principal",
              "username": "{{ azure_client_id }}",
              "password": "{{ azure_client_secret }}",
              "description": "Azure Service Principal",
              "tenant": "{{ azure_tenant_id }}",
              "subscriptionId": "{{ azure_subscription_id }}",
              "$class": "com.microsoft.azure.credentials.AzureServicePrincipal"
            }
          }
        body_format: raw
        status_code: 200
        return_content: yes

    ##################################################################
    # Verificar que las credenciales se crearon correctamente
    ##################################################################
    - name: Verificar credenciales creadas
      uri:
        url: "{{ jenkins_url }}/credentials/store/system/domain/_/api/json?tree=credentials[id,description]"
        method: GET
        user: "{{ jenkins_admin_user }}"
        password: "{{ jenkins_admin_password }}"
        headers:
          Content-Type: "application/json"
        return_content: yes
      register: final_credentials

    - name: Mostrar credenciales existentes
      debug:
        msg: "Credenciales disponibles: {{ final_credentials.json.credentials }}"

    ##################################################################
    # Mensaje final de Ã©xito
    ##################################################################
    - name: Credenciales Docker Hub y Azure creadas con Ã©xito ðŸŽ‰
      debug:
        msg: "âœ… Credenciales Docker Hub y Azure Service Principal creadas con Ã©xito."

    - name: Mostrar resultados de creaciÃ³n
      debug:
        msg: |
          Resultado Docker Hub: {{ dockerhub_result.status | default('No ejecutado') }}
          Resultado Azure: {{ azure_result.status | default('No ejecutado') }}